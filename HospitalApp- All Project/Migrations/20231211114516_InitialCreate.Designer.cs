// <auto-generated />
using System;
using HospitalApp.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HospitalApp.Migrations
{
    [DbContext(typeof(HospitalContext))]
    [Migration("20231211114516_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.23");

            modelBuilder.Entity("HospitalApp.Models.Dal", b =>
                {
                    b.Property<int>("DalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("DalName")
                        .HasColumnType("TEXT");

                    b.HasKey("DalId");

                    b.ToTable("Dallar");
                });

            modelBuilder.Entity("HospitalApp.Models.Doktor", b =>
                {
                    b.Property<int>("DoktorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("DalId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("DoktorAd")
                        .HasColumnType("TEXT");

                    b.Property<int>("PolId")
                        .HasColumnType("INTEGER");

                    b.HasKey("DoktorId");

                    b.HasIndex("DalId");

                    b.HasIndex("PolId");

                    b.ToTable("Doktorlar");
                });

            modelBuilder.Entity("HospitalApp.Models.Poliklinik", b =>
                {
                    b.Property<int>("PolId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("PolName")
                        .HasColumnType("TEXT");

                    b.HasKey("PolId");

                    b.ToTable("Poliklinikler");
                });

            modelBuilder.Entity("HospitalApp.Models.Randevu", b =>
                {
                    b.Property<int>("RandevuId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("DoktorId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("HastaAdi")
                        .HasColumnType("TEXT");

                    b.Property<string>("HastaTC")
                        .HasColumnType("TEXT");

                    b.Property<string>("HastaTelefonNo")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("RandevuTarihi")
                        .HasColumnType("TEXT");

                    b.HasKey("RandevuId");

                    b.HasIndex("DoktorId");

                    b.ToTable("Randevular");
                });

            modelBuilder.Entity("HospitalApp.Models.Doktor", b =>
                {
                    b.HasOne("HospitalApp.Models.Dal", "Dal")
                        .WithMany()
                        .HasForeignKey("DalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HospitalApp.Models.Poliklinik", "Poliklinik")
                        .WithMany("Doktorlar")
                        .HasForeignKey("PolId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Dal");

                    b.Navigation("Poliklinik");
                });

            modelBuilder.Entity("HospitalApp.Models.Randevu", b =>
                {
                    b.HasOne("HospitalApp.Models.Doktor", "Doktor")
                        .WithMany()
                        .HasForeignKey("DoktorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Doktor");
                });

            modelBuilder.Entity("HospitalApp.Models.Poliklinik", b =>
                {
                    b.Navigation("Doktorlar");
                });
#pragma warning restore 612, 618
        }
    }
}
